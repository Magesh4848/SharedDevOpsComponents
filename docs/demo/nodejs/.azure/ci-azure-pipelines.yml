    
trigger:
  branches:
    include:
    - master

variables:
  helmVersion: '2.11.0'
  kubectlVersion: v1.12.1
  nodeVersionSpec: 10.x

stages:
  - template: ../../../../pipeline-template.yml
    parameters:
      linuxAgentPool: 'ubuntu-latest'
      windowsAgentPool: 'windows-latest'
      buildType: 'nodejs'
      projectName: 'mydrive-user'
      initSteps: []
      docker: true
      helm: true
      imageName: 'mydrive-user'
      helmCharts: charts
      codeRootDir: docs/demo/nodejs
      deployType: 'helm-native'
      PR: {
        enabled: false,
        gate: true,
        credscan: true,
        codescan: true,
        vulnerabilitiesscan: true
      }
      CI: {
        enabled: true,
        azureContainerRegistry: 'artifacts-repo', 
        azureSubscription: 'azure-service-connection',
        azureContainerRegistryName: 'test48',
        scan: true,
        gate: true,
      }
      AUTOMATION: {
        enabled: true,
        azureSubscription: 'azure-service-connection', 
        azureContainerRegistry: 'artifacts-repo',
        azureContainerRegistryName: 'test48',
        environmentNamespace: 'Automation.automation', 
        namespace: 'automation',
        upgradeParameters: '--set repository=test48.azurecr.io/mydrive-user --set tag=$(Build.BuildId) --set name=mydrive-user', 
        gate: true     
      }
      FUNCTIONAL: {
        enabled: true,
        azureSubscription: 'azure-service-connection', 
        azureContainerRegistry: 'artifacts-repo',
        azureContainerRegistryName: 'test48',
        environmentNamespace: 'Functional.functional', 
        namespace: 'functional',
        upgradeParameters: '--set repository=test48.azurecr.io/mydrive-user --set tag=$(Build.BuildId) --set name=mydrive-user',
        testType: 'galing',
        gatlingScenario: '',
        gate: true,
      }
      NONFUNCTIONAL: {
        enabled: true,
        azureSubscription: 'azure-service-connection', 
        azureContainerRegistry: 'artifacts-repo',
        azureContainerRegistryName: 'test48',
        environmentNamespace: 'NonFunctional.nonfunctional', 
        namespace: 'nonfunctional',
        upgradeParameters: '--set repository=test48.azurecr.io/mydrive-user --set tag=$(Build.BuildId) --set name=mydrive-user',
        gate: true
      }
